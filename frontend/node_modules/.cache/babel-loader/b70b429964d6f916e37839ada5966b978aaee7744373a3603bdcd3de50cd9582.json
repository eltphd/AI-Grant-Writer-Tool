{"ast":null,"code":"var _jsxFileName = \"/Users/drtarttphd/Documents/AI-Grant-Writer-Tool/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ChatComponent from './ChatComponent';\nimport GrantSections from './GrantSections';\nimport NavigationComponent from './NavigationComponent';\nimport ApprovalComponent from './ApprovalComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || (window.location.hostname === 'localhost' ? 'http://localhost:8080' : 'https://ai-grant-writer-tool-production.up.railway.app');\nfunction App() {\n  _s();\n  var _currentProject$rfpAn, _currentProject$rfpAn2;\n  const [currentStep, setCurrentStep] = useState(1);\n  const [currentProject, setCurrentProject] = useState(null);\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [organizationInfo, setOrganizationInfo] = useState('');\n  const [initiativeDescription, setInitiativeDescription] = useState('');\n  const [projectContext, setProjectContext] = useState({\n    files: []\n  });\n  const [sections, setSections] = useState({\n    executive_summary: '',\n    organization_profile: '',\n    project_approach: '',\n    timeline: '',\n    budget: '',\n    evaluation: ''\n  });\n  const [uploadStatus, setUploadStatus] = useState({\n    message: '',\n    type: ''\n  });\n\n  // Load projects on app load (no auth required)\n  useEffect(() => {\n    loadProjects();\n  }, []);\n  const loadProjects = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/projects`);\n      if (response.ok) {\n        const data = await response.json();\n        setProjects(data.projects || []);\n      } else {\n        console.error('Failed to load projects:', response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error('Error loading projects:', error);\n    }\n  };\n  const createProject = async () => {\n    try {\n      console.log('Creating project...');\n      console.log('API_BASE:', API_BASE);\n      const newProject = {\n        id: Date.now().toString(),\n        name: `New Project ${projects.length + 1}`,\n        description: 'A new grant writing project',\n        created_at: new Date().toISOString()\n      };\n      console.log('Sending project data:', newProject);\n\n      // Save to backend\n      const response = await fetch(`${API_BASE}/projects`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newProject)\n      });\n      console.log('Response status:', response.status);\n      console.log('Response ok:', response.ok);\n      if (response.ok) {\n        const result = await response.json();\n        console.log('Response result:', result);\n        if (result.success) {\n          setProjects([...projects, result.project]);\n          setCurrentProject(result.project);\n          setCurrentStep(2);\n          console.log('Project created successfully');\n        } else {\n          console.error('Error creating project:', result.error);\n        }\n      } else {\n        console.error('Error creating project:', response.status);\n        const errorText = await response.text();\n        console.error('Error response:', errorText);\n      }\n    } catch (error) {\n      console.error('Error creating project:', error);\n    }\n  };\n  const selectProject = project => {\n    setCurrentProject(project);\n    setCurrentStep(2);\n  };\n  const loadProjectContext = async projectId => {\n    try {\n      const response = await fetch(`${API_BASE}/context/${projectId}`);\n      if (response.ok) {\n        const data = await response.json();\n        setProjectContext(data.context || {\n          files: []\n        });\n      }\n    } catch (error) {\n      console.error('Error loading project context:', error);\n    }\n  };\n  const handleFileUpload = async files => {\n    if (!currentProject) {\n      setUploadStatus({\n        message: '❌ Please select or create a project before uploading.',\n        type: 'error'\n      });\n      return;\n    }\n    try {\n      setLoading(true);\n      setUploadStatus({\n        message: '',\n        type: ''\n      });\n      let successCount = 0;\n      let errorCount = 0;\n      for (const file of files) {\n        try {\n          // Read file content\n          const {\n            content,\n            is_base64\n          } = await readFileContent(file);\n\n          // Upload file as JSON (matching backend expectation)\n          const response = await fetch(`${API_BASE}/upload`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              project_id: currentProject.id,\n              file: {\n                filename: file.name,\n                content,\n                is_base64\n              }\n            })\n          });\n          if (response.ok) {\n            const result = await response.json();\n            if (result.success) {\n              successCount++;\n              console.log(`File ${file.name} uploaded successfully`);\n            } else {\n              errorCount++;\n              console.error(`Failed to upload ${file.name}:`, result.error);\n            }\n          } else {\n            errorCount++;\n            console.error(`HTTP error uploading ${file.name}:`, response.status);\n          }\n        } catch (error) {\n          errorCount++;\n          console.error(`Error uploading ${file.name}:`, error);\n        }\n      }\n\n      // Show upload status\n      if (successCount > 0 && errorCount === 0) {\n        setUploadStatus({\n          message: `✅ Successfully uploaded ${successCount} file(s)`,\n          type: 'success'\n        });\n      } else if (successCount > 0 && errorCount > 0) {\n        setUploadStatus({\n          message: `⚠️ Uploaded ${successCount} file(s), ${errorCount} failed`,\n          type: 'warning'\n        });\n      } else {\n        setUploadStatus({\n          message: `❌ Failed to upload ${errorCount} file(s)`,\n          type: 'error'\n        });\n      }\n\n      // Clear status after 5 seconds\n      setTimeout(() => setUploadStatus({\n        message: '',\n        type: ''\n      }), 5000);\n\n      // Reload project context to show uploaded files\n      await loadProjectContext(currentProject.id);\n    } catch (error) {\n      console.error('Error uploading files:', error);\n      setUploadStatus({\n        message: `❌ Error uploading files: ${error.message}`,\n        type: 'error'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleRFPUpload = async file => {\n    if (!currentProject) {\n      setUploadStatus({\n        message: '❌ Please select or create a project before uploading.',\n        type: 'error'\n      });\n      return;\n    }\n    try {\n      setLoading(true);\n      setUploadStatus({\n        message: '',\n        type: ''\n      });\n\n      // Read file content\n      const {\n        content,\n        is_base64\n      } = await readFileContent(file);\n\n      // Upload RFP for analysis\n      const response = await fetch(`${API_BASE}/rfp/upload/${currentProject.id}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          filename: file.name,\n          is_base64,\n          content: content\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n        if (result.success) {\n          console.log(`RFP file ${file.name} uploaded and analyzed successfully`);\n\n          // Store RFP analysis result\n          setCurrentProject(prev => ({\n            ...prev,\n            rfpAnalysis: result.rfp\n          }));\n\n          // Show success message\n          setUploadStatus({\n            message: `✅ RFP uploaded successfully! Analysis complete.`,\n            type: 'success'\n          });\n\n          // Clear status after 5 seconds\n          setTimeout(() => setUploadStatus({\n            message: '',\n            type: ''\n          }), 5000);\n        } else {\n          setUploadStatus({\n            message: `❌ RFP upload failed: ${result.error}`,\n            type: 'error'\n          });\n        }\n      } else {\n        setUploadStatus({\n          message: `❌ RFP upload failed: HTTP ${response.status}`,\n          type: 'error'\n        });\n      }\n    } catch (error) {\n      console.error('Error uploading RFP file:', error);\n      setUploadStatus({\n        message: `❌ Error uploading RFP file: ${error.message}`,\n        type: 'error'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const readFileContent = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onerror = reject;\n      // For binary files (PDF, DOCX) we read as ArrayBuffer and convert to base64 string\n      if (file.type === \"application/pdf\" || file.name.endsWith(\".pdf\") || file.name.endsWith(\".doc\") || file.name.endsWith(\".docx\")) {\n        reader.readAsArrayBuffer(file);\n        reader.onload = e => {\n          const buffer = e.target.result;\n          const binary = new Uint8Array(buffer).reduce((acc, byte) => acc + String.fromCharCode(byte), \"\");\n          const base64String = btoa(binary);\n          resolve({\n            content: base64String,\n            is_base64: true\n          });\n        };\n      } else {\n        reader.readAsText(file);\n        reader.onload = e => {\n          resolve({\n            content: e.target.result,\n            is_base64: false\n          });\n        };\n      }\n    });\n  };\n  const analyzeRFPAlignment = async () => {\n    if (!currentProject || !currentProject.rfpAnalysis) {\n      alert('Please upload an RFP document first.');\n      return;\n    }\n    try {\n      setLoading(true);\n\n      // Create organization profile from context\n      const orgResponse = await fetch(`${API_BASE}/organization/create`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: 'My Organization',\n          mission: 'To serve our community through innovative programs',\n          description: organizationInfo,\n          key_accomplishments: ['Program A success', 'Partnership B established'],\n          partnerships: ['Local government', 'Community organizations'],\n          impact_metrics: {\n            'people_served': 1000,\n            'programs_delivered': 5\n          }\n        })\n      });\n      if (orgResponse.ok) {\n        const orgData = await orgResponse.json();\n\n        // Analyze RFP alignment\n        const analysisResponse = await fetch(`${API_BASE}/rfp/analyze`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            project_id: currentProject.id,\n            org_id: orgData.organization.id,\n            rfp_id: currentProject.rfpAnalysis.id\n          })\n        });\n        if (analysisResponse.ok) {\n          const analysisData = await analysisResponse.json();\n          if (analysisData.success) {\n            console.log('RFP analysis complete:', analysisData.analysis);\n\n            // Store analysis results\n            setCurrentProject(prev => ({\n              ...prev,\n              rfpAlignment: analysisData.analysis,\n              projectResponse: analysisData.response\n            }));\n            alert(`Analysis complete! Alignment score: ${analysisData.analysis.org_fit_score}%`);\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error analyzing RFP alignment:', error);\n      alert('Error analyzing RFP alignment. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateProjectContext = async () => {\n    if (!currentProject) return;\n    try {\n      const response = await fetch(`${API_BASE}/context/${currentProject.id}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          organization_info: organizationInfo,\n          initiative_description: initiativeDescription\n        })\n      });\n      if (response.ok) {\n        console.log('Project context updated successfully');\n      }\n    } catch (error) {\n      console.error('Error updating project context:', error);\n    }\n  };\n  const handleEditSection = async sectionKey => {\n    try {\n      setLoading(true);\n\n      // Create a more specific prompt for section generation\n      const sectionPrompts = {\n        'executive_summary': 'Generate a comprehensive executive summary for our grant proposal. Include our organization background, project goals, funding request, and expected impact.',\n        'organization_profile': 'Write a detailed organization profile section. Include our mission, history, key accomplishments, leadership team, and capacity to deliver this project.',\n        'project_approach': 'Create a detailed project description and approach section. Include SMART objectives, activities, timeline, staffing plan, and key partnerships.',\n        'timeline': 'Develop a comprehensive timeline and implementation plan. Include milestones, deliverables, and project phases.',\n        'budget': 'Create a detailed budget and financial plan section. Include cost breakdown, justifications, and sustainability plan.',\n        'evaluation': 'Write an evaluation and impact measurement section. Include KPIs, data collection methods, and reporting schedule.'\n      };\n      const prompt = sectionPrompts[sectionKey] || `Generate content for the ${sectionKey.replace('_', ' ')} section of our grant proposal.`;\n\n      // Call the AI to generate content for this section\n      const response = await fetch(`${API_BASE}/chat/send_message`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          project_id: (currentProject === null || currentProject === void 0 ? void 0 : currentProject.id) || 'test-project',\n          message: prompt\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success) {\n          // Update the section with AI-generated content\n          setSections(prev => ({\n            ...prev,\n            [sectionKey]: data.response\n          }));\n\n          // Show success message\n          setUploadStatus({\n            message: `✅ ${sectionKey.replace('_', ' ')} section generated successfully!`,\n            type: 'success'\n          });\n\n          // Clear status after 3 seconds\n          setTimeout(() => setUploadStatus({\n            message: '',\n            type: ''\n          }), 3000);\n        } else {\n          setUploadStatus({\n            message: `❌ Failed to generate ${sectionKey.replace('_', ' ')} section: ${data.error}`,\n            type: 'error'\n          });\n        }\n      } else {\n        console.error('Failed to generate section content:', response.status);\n        setUploadStatus({\n          message: `❌ Failed to generate ${sectionKey.replace('_', ' ')} section. Please try again.`,\n          type: 'error'\n        });\n      }\n    } catch (error) {\n      console.error('Error generating section content:', error);\n      setUploadStatus({\n        message: `❌ Error generating ${sectionKey.replace('_', ' ')} section: ${error.message}`,\n        type: 'error'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleStepChange = stepId => {\n    setCurrentStep(stepId);\n  };\n  const handleExportMarkdown = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/export/markdown`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          project_id: (currentProject === null || currentProject === void 0 ? void 0 : currentProject.id) || 'test-project',\n          sections: sections\n        })\n      });\n      if (response.ok) {\n        const blob = await response.blob();\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'grant-proposal.md';\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n      } else {\n        console.error('Export failed:', response.status);\n        alert('Export failed. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error exporting:', error);\n      alert('Export failed. Please try again.');\n    }\n  };\n  const handleExportDocx = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/export/txt`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          project_id: (currentProject === null || currentProject === void 0 ? void 0 : currentProject.id) || 'test-project',\n          sections: sections\n        })\n      });\n      if (response.ok) {\n        const blob = await response.blob();\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'grant-proposal.txt';\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n      } else {\n        console.error('Export failed:', response.status);\n        alert('Export failed. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error exporting:', error);\n      alert('Export failed. Please try again.');\n    }\n  };\n  const handleReviewSections = () => {\n    setCurrentStep(2); // Go back to the grant creation page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(NavigationComponent, {\n      currentStep: currentStep,\n      onStepChange: handleStepChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '1rem',\n        backgroundColor: '#0070f3',\n        color: 'white',\n        textAlign: 'center',\n        fontWeight: 'bold'\n      },\n      children: \"Friday, August 1, 2025\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-main\",\n      children: [currentStep === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Your Grant Projects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select an existing project or create a new one to get started\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-grid\",\n          children: [projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-card\",\n            onClick: () => selectProject(project),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"project-icon\",\n              children: \"\\uD83D\\uDCC1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"project-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: project.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: project.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: [\"Created: \", new Date(project.created_at).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 19\n            }, this)]\n          }, project.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-card new-project\",\n            onClick: createProject,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"project-icon\",\n              children: \"\\u2795\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"project-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Create New Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Start a new grant writing project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 11\n      }, this), currentStep === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create Your Grant Proposal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Upload documents, set context, and write your grant sections all in one place\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grant-creation-layout\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"context-upload-panel\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uD83D\\uDCC4 Document Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"\\uD83D\\uDCCB RFP Upload (Recommended)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Upload the Request for Proposal document to help me align your response with grant requirements.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \".pdf,.docx,.doc,.txt,.md\",\n                onChange: e => handleRFPUpload(e.target.files[0]),\n                className: \"file-input\",\n                id: \"rfp-upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 602,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"rfp-upload\",\n                className: \"upload-label rfp-upload\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"upload-icon\",\n                  children: \"\\uD83D\\uDCCB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 610,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"upload-text\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: \"Upload RFP Document\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 612,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Grant request with directions and requirements\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 613,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 19\n              }, this), uploadStatus.message && uploadStatus.type && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `upload-status ${uploadStatus.type}`,\n                children: uploadStatus.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 21\n              }, this), currentProject && currentProject.rfpAnalysis && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rfp-analysis-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"\\uD83C\\uDFAF RFP Analysis Complete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 626,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Requirements found: \", ((_currentProject$rfpAn = currentProject.rfpAnalysis.requirements) === null || _currentProject$rfpAn === void 0 ? void 0 : _currentProject$rfpAn.length) || 0]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 627,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Eligibility criteria: \", ((_currentProject$rfpAn2 = currentProject.rfpAnalysis.eligibility_criteria) === null || _currentProject$rfpAn2 === void 0 ? void 0 : _currentProject$rfpAn2.length) || 0]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 628,\n                  columnNumber: 23\n                }, this), currentProject.rfpAnalysis.funding_amount && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Funding amount: \", currentProject.rfpAnalysis.funding_amount]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 25\n                }, this), currentProject.rfpAnalysis.deadline && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Deadline: \", currentProject.rfpAnalysis.deadline]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-primary\",\n                  onClick: analyzeRFPAlignment,\n                  disabled: loading,\n                  children: loading ? 'Analyzing...' : 'Analyze Organization Alignment'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 636,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 21\n              }, this), currentProject && currentProject.rfpAlignment && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alignment-results\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"\\uD83D\\uDCCA Alignment Results\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 648,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Organization Fit Score:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 649,\n                    columnNumber: 26\n                  }, this), \" \", currentProject.rfpAlignment.org_fit_score, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Overall Score:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 650,\n                    columnNumber: 26\n                  }, this), \" \", currentProject.rfpAlignment.overall_score, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 650,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 647,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grant-sections-panel\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uD83D\\uDCCB Grant Sections\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Write your grant proposal sections. I'll help you with guidance and suggestions!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sections-grid\",\n              children: Object.entries({\n                executive_summary: \"Executive Summary\",\n                organization_profile: \"Organization Profile\",\n                project_approach: \"Project Description & Approach\",\n                timeline: \"Timeline & Implementation\",\n                budget: \"Budget & Financial Plan\",\n                evaluation: \"Evaluation & Impact Measurement\"\n              }).map(([sectionKey, sectionTitle]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"section-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"section-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: sectionTitle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 672,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-primary btn-small\",\n                    onClick: () => handleEditSection(sectionKey),\n                    disabled: loading,\n                    children: loading ? 'Generating...' : 'Auto-Generate'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 673,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 671,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"section-content\",\n                  children: sections[sectionKey] || `No content yet. Click 'Auto-Generate' to create your ${sectionTitle.toLowerCase()} using AI.`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 682,\n                  columnNumber: 23\n                }, this)]\n              }, sectionKey, true, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section-help\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"\\uD83D\\uDCA1 Need Help Writing?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Go to the Chat section and ask me to help you write any specific section. I can provide guidance, examples, and suggestions tailored to your project!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-secondary\",\n                onClick: () => setCurrentStep(3),\n                children: \"Go to Chat\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 11\n      }, this), currentStep === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"AI-Powered Grant Writing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Chat with AI to brainstorm ideas and get writing assistance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-main\",\n          children: /*#__PURE__*/_jsxDEV(ChatComponent, {\n            projectId: (currentProject === null || currentProject === void 0 ? void 0 : currentProject.id) || 'test-project'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 11\n      }, this), currentStep === 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Content Approval Workflow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Review and approve AI-generated content that contains sensitive information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"approval-panel\",\n          children: /*#__PURE__*/_jsxDEV(ApprovalComponent, {\n            projectId: (currentProject === null || currentProject === void 0 ? void 0 : currentProject.id) || 'test-project',\n            onApprovalUpdate: () => {\n              // Refresh any necessary data after approval updates\n              console.log('Approval workflow updated');\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 11\n      }, this), currentStep === 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Review & Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Review your complete grant proposal and export it\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 740,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"export-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCC4 Your Grant Proposal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Review your completed grant proposal before exporting.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"export-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: handleExportMarkdown,\n              children: \"\\uD83D\\uDCDD Export as Markdown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: handleExportDocx,\n              children: \"\\uD83D\\uDCC4 Export as TXT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: handleReviewSections,\n              children: \"\\uD83D\\uDCCB Review Sections\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 754,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 533,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"c+EbhcSLOBN0s16gv58HCV45wr4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ChatComponent","GrantSections","NavigationComponent","ApprovalComponent","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","window","location","hostname","App","_s","_currentProject$rfpAn","_currentProject$rfpAn2","currentStep","setCurrentStep","currentProject","setCurrentProject","projects","setProjects","loading","setLoading","organizationInfo","setOrganizationInfo","initiativeDescription","setInitiativeDescription","projectContext","setProjectContext","files","sections","setSections","executive_summary","organization_profile","project_approach","timeline","budget","evaluation","uploadStatus","setUploadStatus","message","type","loadProjects","response","fetch","ok","data","json","console","error","status","statusText","createProject","log","newProject","id","Date","now","toString","name","length","description","created_at","toISOString","method","headers","body","JSON","stringify","result","success","project","errorText","text","selectProject","loadProjectContext","projectId","context","handleFileUpload","successCount","errorCount","file","content","is_base64","readFileContent","project_id","filename","setTimeout","handleRFPUpload","prev","rfpAnalysis","rfp","Promise","resolve","reject","reader","FileReader","onerror","endsWith","readAsArrayBuffer","onload","e","buffer","target","binary","Uint8Array","reduce","acc","byte","String","fromCharCode","base64String","btoa","readAsText","analyzeRFPAlignment","alert","orgResponse","mission","key_accomplishments","partnerships","impact_metrics","orgData","analysisResponse","org_id","organization","rfp_id","analysisData","analysis","rfpAlignment","projectResponse","org_fit_score","updateProjectContext","organization_info","initiative_description","handleEditSection","sectionKey","sectionPrompts","prompt","replace","handleStepChange","stepId","handleExportMarkdown","blob","url","URL","createObjectURL","a","document","createElement","href","download","appendChild","click","revokeObjectURL","removeChild","handleExportDocx","handleReviewSections","className","children","onStepChange","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","backgroundColor","color","textAlign","fontWeight","map","onClick","toLocaleDateString","accept","onChange","htmlFor","requirements","eligibility_criteria","funding_amount","deadline","disabled","overall_score","Object","entries","sectionTitle","toLowerCase","onApprovalUpdate","_c","$RefreshReg$"],"sources":["/Users/drtarttphd/Documents/AI-Grant-Writer-Tool/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ChatComponent from './ChatComponent';\nimport GrantSections from './GrantSections';\nimport NavigationComponent from './NavigationComponent';\nimport ApprovalComponent from './ApprovalComponent';\n\nconst API_BASE = process.env.REACT_APP_API_BASE || (window.location.hostname === 'localhost' ? 'http://localhost:8080' : 'https://ai-grant-writer-tool-production.up.railway.app');\n\nfunction App() {\n  const [currentStep, setCurrentStep] = useState(1);\n  const [currentProject, setCurrentProject] = useState(null);\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [organizationInfo, setOrganizationInfo] = useState('');\n  const [initiativeDescription, setInitiativeDescription] = useState('');\n  const [projectContext, setProjectContext] = useState({ files: [] });\n  const [sections, setSections] = useState({\n    executive_summary: '',\n    organization_profile: '',\n    project_approach: '',\n    timeline: '',\n    budget: '',\n    evaluation: ''\n  });\n  const [uploadStatus, setUploadStatus] = useState({ message: '', type: '' });\n\n  // Load projects on app load (no auth required)\n  useEffect(() => {\n    loadProjects();\n  }, []);\n\n  const loadProjects = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/projects`);\n\n      if (response.ok) {\n        const data = await response.json();\n        setProjects(data.projects || []);\n      } else {\n        console.error('Failed to load projects:', response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error('Error loading projects:', error);\n    }\n  };\n\n  const createProject = async () => {\n    try {\n      console.log('Creating project...');\n      console.log('API_BASE:', API_BASE);\n      \n      const newProject = {\n        id: Date.now().toString(),\n        name: `New Project ${projects.length + 1}`,\n        description: 'A new grant writing project',\n        created_at: new Date().toISOString()\n      };\n      \n      console.log('Sending project data:', newProject);\n      \n      // Save to backend\n      const response = await fetch(`${API_BASE}/projects`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(newProject),\n      });\n\n      console.log('Response status:', response.status);\n      console.log('Response ok:', response.ok);\n\n      if (response.ok) {\n        const result = await response.json();\n        console.log('Response result:', result);\n        if (result.success) {\n          setProjects([...projects, result.project]);\n          setCurrentProject(result.project);\n          setCurrentStep(2);\n          console.log('Project created successfully');\n        } else {\n          console.error('Error creating project:', result.error);\n        }\n      } else {\n        console.error('Error creating project:', response.status);\n        const errorText = await response.text();\n        console.error('Error response:', errorText);\n      }\n    } catch (error) {\n      console.error('Error creating project:', error);\n    }\n  };\n\n  const selectProject = (project) => {\n    setCurrentProject(project);\n    setCurrentStep(2);\n  };\n\n  const loadProjectContext = async (projectId) => {\n    try {\n      const response = await fetch(`${API_BASE}/context/${projectId}`);\n      if (response.ok) {\n        const data = await response.json();\n        setProjectContext(data.context || { files: [] });\n      }\n    } catch (error) {\n      console.error('Error loading project context:', error);\n    }\n  };\n\n  const handleFileUpload = async (files) => {\n    if (!currentProject) {\n      setUploadStatus({\n        message: '❌ Please select or create a project before uploading.',\n        type: 'error'\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setUploadStatus({ message: '', type: '' });\n      \n      let successCount = 0;\n      let errorCount = 0;\n      \n      for (const file of files) {\n        try {\n          // Read file content\n          const { content, is_base64 } = await readFileContent(file);\n          \n          // Upload file as JSON (matching backend expectation)\n          const response = await fetch(`${API_BASE}/upload`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              project_id: currentProject.id,\n              file: {\n                filename: file.name,\n                content,\n                is_base64\n              }\n            }),\n          });\n\n          if (response.ok) {\n            const result = await response.json();\n            if (result.success) {\n              successCount++;\n              console.log(`File ${file.name} uploaded successfully`);\n            } else {\n              errorCount++;\n              console.error(`Failed to upload ${file.name}:`, result.error);\n            }\n          } else {\n            errorCount++;\n            console.error(`HTTP error uploading ${file.name}:`, response.status);\n          }\n        } catch (error) {\n          errorCount++;\n          console.error(`Error uploading ${file.name}:`, error);\n        }\n      }\n\n      // Show upload status\n      if (successCount > 0 && errorCount === 0) {\n        setUploadStatus({ \n          message: `✅ Successfully uploaded ${successCount} file(s)`, \n          type: 'success' \n        });\n      } else if (successCount > 0 && errorCount > 0) {\n        setUploadStatus({ \n          message: `⚠️ Uploaded ${successCount} file(s), ${errorCount} failed`, \n          type: 'warning' \n        });\n      } else {\n        setUploadStatus({ \n          message: `❌ Failed to upload ${errorCount} file(s)`, \n          type: 'error' \n        });\n      }\n\n      // Clear status after 5 seconds\n      setTimeout(() => setUploadStatus({ message: '', type: '' }), 5000);\n\n      // Reload project context to show uploaded files\n      await loadProjectContext(currentProject.id);\n    } catch (error) {\n      console.error('Error uploading files:', error);\n      setUploadStatus({ \n        message: `❌ Error uploading files: ${error.message}`, \n        type: 'error' \n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRFPUpload = async (file) => {\n    if (!currentProject) {\n      setUploadStatus({\n        message: '❌ Please select or create a project before uploading.',\n        type: 'error'\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setUploadStatus({ message: '', type: '' });\n      \n      // Read file content\n      const { content, is_base64 } = await readFileContent(file);\n      \n      // Upload RFP for analysis\n      const response = await fetch(`${API_BASE}/rfp/upload/${currentProject.id}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          filename: file.name,\n          is_base64,\n\n          content: content\n        }),\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        if (result.success) {\n          console.log(`RFP file ${file.name} uploaded and analyzed successfully`);\n          \n          // Store RFP analysis result\n          setCurrentProject(prev => ({\n            ...prev,\n            rfpAnalysis: result.rfp\n          }));\n          \n          // Show success message\n          setUploadStatus({ \n            message: `✅ RFP uploaded successfully! Analysis complete.`, \n            type: 'success' \n          });\n          \n          // Clear status after 5 seconds\n          setTimeout(() => setUploadStatus({ message: '', type: '' }), 5000);\n        } else {\n          setUploadStatus({ \n            message: `❌ RFP upload failed: ${result.error}`, \n            type: 'error' \n          });\n        }\n      } else {\n        setUploadStatus({ \n          message: `❌ RFP upload failed: HTTP ${response.status}`, \n          type: 'error' \n        });\n      }\n    } catch (error) {\n      console.error('Error uploading RFP file:', error);\n      setUploadStatus({ \n        message: `❌ Error uploading RFP file: ${error.message}`, \n        type: 'error' \n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const readFileContent = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      \n      reader.onerror = reject;\n      // For binary files (PDF, DOCX) we read as ArrayBuffer and convert to base64 string\n      if (file.type === \"application/pdf\" || file.name.endsWith(\".pdf\") || file.name.endsWith(\".doc\") || file.name.endsWith(\".docx\")) {\n        reader.readAsArrayBuffer(file);\n        reader.onload = (e) => {\n          const buffer = e.target.result;\n          const binary = new Uint8Array(buffer).reduce((acc, byte) => acc + String.fromCharCode(byte), \"\");\n          const base64String = btoa(binary);\n          resolve({ content: base64String, is_base64: true });\n        };\n      } else {\n        reader.readAsText(file);\n        reader.onload = (e) => {\n          resolve({ content: e.target.result, is_base64: false });\n        };\n      }\n\n    });\n  };\n\n  const analyzeRFPAlignment = async () => {\n    if (!currentProject || !currentProject.rfpAnalysis) {\n      alert('Please upload an RFP document first.');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      \n      // Create organization profile from context\n      const orgResponse = await fetch(`${API_BASE}/organization/create`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name: 'My Organization',\n          mission: 'To serve our community through innovative programs',\n          description: organizationInfo,\n          key_accomplishments: ['Program A success', 'Partnership B established'],\n          partnerships: ['Local government', 'Community organizations'],\n          impact_metrics: {\n            'people_served': 1000,\n            'programs_delivered': 5\n          }\n        }),\n      });\n\n      if (orgResponse.ok) {\n        const orgData = await orgResponse.json();\n        \n        // Analyze RFP alignment\n        const analysisResponse = await fetch(`${API_BASE}/rfp/analyze`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            project_id: currentProject.id,\n            org_id: orgData.organization.id,\n            rfp_id: currentProject.rfpAnalysis.id\n          }),\n        });\n\n        if (analysisResponse.ok) {\n          const analysisData = await analysisResponse.json();\n          if (analysisData.success) {\n            console.log('RFP analysis complete:', analysisData.analysis);\n            \n            // Store analysis results\n            setCurrentProject(prev => ({\n              ...prev,\n              rfpAlignment: analysisData.analysis,\n              projectResponse: analysisData.response\n            }));\n            \n            alert(`Analysis complete! Alignment score: ${analysisData.analysis.org_fit_score}%`);\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error analyzing RFP alignment:', error);\n      alert('Error analyzing RFP alignment. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateProjectContext = async () => {\n    if (!currentProject) return;\n\n    try {\n      const response = await fetch(`${API_BASE}/context/${currentProject.id}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          organization_info: organizationInfo,\n          initiative_description: initiativeDescription,\n        }),\n      });\n\n      if (response.ok) {\n        console.log('Project context updated successfully');\n      }\n    } catch (error) {\n      console.error('Error updating project context:', error);\n    }\n  };\n\n  const handleEditSection = async (sectionKey) => {\n    try {\n      setLoading(true);\n      \n      // Create a more specific prompt for section generation\n      const sectionPrompts = {\n        'executive_summary': 'Generate a comprehensive executive summary for our grant proposal. Include our organization background, project goals, funding request, and expected impact.',\n        'organization_profile': 'Write a detailed organization profile section. Include our mission, history, key accomplishments, leadership team, and capacity to deliver this project.',\n        'project_approach': 'Create a detailed project description and approach section. Include SMART objectives, activities, timeline, staffing plan, and key partnerships.',\n        'timeline': 'Develop a comprehensive timeline and implementation plan. Include milestones, deliverables, and project phases.',\n        'budget': 'Create a detailed budget and financial plan section. Include cost breakdown, justifications, and sustainability plan.',\n        'evaluation': 'Write an evaluation and impact measurement section. Include KPIs, data collection methods, and reporting schedule.'\n      };\n      \n      const prompt = sectionPrompts[sectionKey] || `Generate content for the ${sectionKey.replace('_', ' ')} section of our grant proposal.`;\n      \n      // Call the AI to generate content for this section\n      const response = await fetch(`${API_BASE}/chat/send_message`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          project_id: currentProject?.id || 'test-project',\n          message: prompt\n        }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success) {\n          // Update the section with AI-generated content\n          setSections(prev => ({\n            ...prev,\n            [sectionKey]: data.response\n          }));\n          \n          // Show success message\n          setUploadStatus({ \n            message: `✅ ${sectionKey.replace('_', ' ')} section generated successfully!`, \n            type: 'success' \n          });\n          \n          // Clear status after 3 seconds\n          setTimeout(() => setUploadStatus({ message: '', type: '' }), 3000);\n        } else {\n          setUploadStatus({ \n            message: `❌ Failed to generate ${sectionKey.replace('_', ' ')} section: ${data.error}`, \n            type: 'error' \n          });\n        }\n      } else {\n        console.error('Failed to generate section content:', response.status);\n        setUploadStatus({ \n          message: `❌ Failed to generate ${sectionKey.replace('_', ' ')} section. Please try again.`, \n          type: 'error' \n        });\n      }\n    } catch (error) {\n      console.error('Error generating section content:', error);\n      setUploadStatus({ \n        message: `❌ Error generating ${sectionKey.replace('_', ' ')} section: ${error.message}`, \n        type: 'error' \n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleStepChange = (stepId) => {\n    setCurrentStep(stepId);\n  };\n\n  const handleExportMarkdown = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/export/markdown`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          project_id: currentProject?.id || 'test-project',\n          sections: sections\n        }),\n      });\n\n      if (response.ok) {\n        const blob = await response.blob();\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'grant-proposal.md';\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n      } else {\n        console.error('Export failed:', response.status);\n        alert('Export failed. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error exporting:', error);\n      alert('Export failed. Please try again.');\n    }\n  };\n\n  const handleExportDocx = async () => {\n    try {\n      const response = await fetch(`${API_BASE}/export/txt`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          project_id: currentProject?.id || 'test-project',\n          sections: sections\n        }),\n      });\n\n      if (response.ok) {\n        const blob = await response.blob();\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'grant-proposal.txt';\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n      } else {\n        console.error('Export failed:', response.status);\n        alert('Export failed. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error exporting:', error);\n      alert('Export failed. Please try again.');\n    }\n  };\n\n  const handleReviewSections = () => {\n    setCurrentStep(2); // Go back to the grant creation page\n  };\n\n  return (\n    <div className=\"app\">\n      <NavigationComponent \n        currentStep={currentStep} \n        onStepChange={handleStepChange}\n      />\n\n      <div style={{ \n        padding: '1rem', \n        backgroundColor: '#0070f3', \n        color: 'white', \n        textAlign: 'center', \n        fontWeight: 'bold' \n      }}>\n        Friday, August 1, 2025\n      </div>\n\n      <main className=\"app-main\">\n        \n        {/* Step 1: Project Selection */}\n        {currentStep === 1 && (\n          <div className=\"step-container\">\n            <div className=\"step-header\">\n              <h2>Your Grant Projects</h2>\n              <p>Select an existing project or create a new one to get started</p>\n            </div>\n            \n            <div className=\"project-grid\">\n              {projects.map((project) => (\n                <div\n                  key={project.id}\n                  className=\"project-card\"\n                  onClick={() => selectProject(project)}\n                >\n                  <div className=\"project-icon\">📁</div>\n                  <div className=\"project-info\">\n                    <h3>{project.name}</h3>\n                    <p>{project.description}</p>\n                    <small>Created: {new Date(project.created_at).toLocaleDateString()}</small>\n                  </div>\n                </div>\n              ))}\n              \n              <div className=\"project-card new-project\" onClick={createProject}>\n                <div className=\"project-icon\">➕</div>\n                <div className=\"project-info\">\n                  <h3>Create New Project</h3>\n                  <p>Start a new grant writing project</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Step 2: Grant Creation (Merged Upload & Sections) */}\n        {currentStep === 2 && (\n          <div className=\"step-container\">\n            <div className=\"step-header\">\n              <h2>Create Your Grant Proposal</h2>\n              <p>Upload documents, set context, and write your grant sections all in one place</p>\n            </div>\n            \n            <div className=\"grant-creation-layout\">\n              {/* Left Side - Context & Upload */}\n              <div className=\"context-upload-panel\">\n                <h3>📄 Document Upload</h3>\n                \n                <div className=\"upload-section\">\n                  <h4>📋 RFP Upload (Recommended)</h4>\n                  <p>Upload the Request for Proposal document to help me align your response with grant requirements.</p>\n                  <input\n                    type=\"file\"\n                    accept=\".pdf,.docx,.doc,.txt,.md\"\n                    onChange={(e) => handleRFPUpload(e.target.files[0])}\n                    className=\"file-input\"\n                    id=\"rfp-upload\"\n                  />\n                  <label htmlFor=\"rfp-upload\" className=\"upload-label rfp-upload\">\n                    <div className=\"upload-icon\">📋</div>\n                    <div className=\"upload-text\">\n                      <h4>Upload RFP Document</h4>\n                      <p>Grant request with directions and requirements</p>\n                    </div>\n                  </label>\n                  \n                  {/* Upload Status Display */}\n                  {uploadStatus.message && uploadStatus.type && (\n                    <div className={`upload-status ${uploadStatus.type}`}>\n                      {uploadStatus.message}\n                    </div>\n                  )}\n                  \n                  {currentProject && currentProject.rfpAnalysis && (\n                    <div className=\"rfp-analysis-section\">\n                      <h4>🎯 RFP Analysis Complete</h4>\n                      <p>Requirements found: {currentProject.rfpAnalysis.requirements?.length || 0}</p>\n                      <p>Eligibility criteria: {currentProject.rfpAnalysis.eligibility_criteria?.length || 0}</p>\n                      {currentProject.rfpAnalysis.funding_amount && (\n                        <p>Funding amount: {currentProject.rfpAnalysis.funding_amount}</p>\n                      )}\n                      {currentProject.rfpAnalysis.deadline && (\n                        <p>Deadline: {currentProject.rfpAnalysis.deadline}</p>\n                      )}\n                      \n                      <button \n                        className=\"btn btn-primary\"\n                        onClick={analyzeRFPAlignment}\n                        disabled={loading}\n                      >\n                        {loading ? 'Analyzing...' : 'Analyze Organization Alignment'}\n                      </button>\n                    </div>\n                  )}\n                  \n                  {currentProject && currentProject.rfpAlignment && (\n                    <div className=\"alignment-results\">\n                      <h4>📊 Alignment Results</h4>\n                      <p><strong>Organization Fit Score:</strong> {currentProject.rfpAlignment.org_fit_score}%</p>\n                      <p><strong>Overall Score:</strong> {currentProject.rfpAlignment.overall_score}%</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n              \n              {/* Right Side - Grant Sections */}\n              <div className=\"grant-sections-panel\">\n                <h3>📋 Grant Sections</h3>\n                <p>Write your grant proposal sections. I'll help you with guidance and suggestions!</p>\n                \n                <div className=\"sections-grid\">\n                  {Object.entries({\n                    executive_summary: \"Executive Summary\",\n                    organization_profile: \"Organization Profile\", \n                    project_approach: \"Project Description & Approach\",\n                    timeline: \"Timeline & Implementation\",\n                    budget: \"Budget & Financial Plan\",\n                    evaluation: \"Evaluation & Impact Measurement\"\n                  }).map(([sectionKey, sectionTitle]) => (\n                    <div key={sectionKey} className=\"section-card\">\n                      <div className=\"section-header\">\n                        <h4>{sectionTitle}</h4>\n                        <button \n                          className=\"btn btn-primary btn-small\"\n                          onClick={() => handleEditSection(sectionKey)}\n                          disabled={loading}\n                        >\n                          {loading ? 'Generating...' : 'Auto-Generate'}\n                        </button>\n                      </div>\n                      \n                      <div className=\"section-content\">\n                        {sections[sectionKey] || `No content yet. Click 'Auto-Generate' to create your ${sectionTitle.toLowerCase()} using AI.`}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n                \n                <div className=\"section-help\">\n                  <h4>💡 Need Help Writing?</h4>\n                  <p>Go to the Chat section and ask me to help you write any specific section. I can provide guidance, examples, and suggestions tailored to your project!</p>\n                  <button className=\"btn btn-secondary\" onClick={() => setCurrentStep(3)}>\n                    Go to Chat\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Step 3: Chat */}\n        {currentStep === 3 && (\n          <div className=\"step-container\">\n            <div className=\"step-header\">\n              <h2>AI-Powered Grant Writing</h2>\n              <p>Chat with AI to brainstorm ideas and get writing assistance</p>\n            </div>\n            \n            <div className=\"chat-main\">\n              <ChatComponent projectId={currentProject?.id || 'test-project'} />\n            </div>\n          </div>\n        )}\n\n        {/* Step 4: Content Approval */}\n        {currentStep === 4 && (\n          <div className=\"step-container\">\n            <div className=\"step-header\">\n              <h2>Content Approval Workflow</h2>\n              <p>Review and approve AI-generated content that contains sensitive information</p>\n            </div>\n            \n            <div className=\"approval-panel\">\n              <ApprovalComponent \n                projectId={currentProject?.id || 'test-project'} \n                onApprovalUpdate={() => {\n                  // Refresh any necessary data after approval updates\n                  console.log('Approval workflow updated');\n                }}\n              />\n            </div>\n          </div>\n        )}\n\n        {/* Step 5: Export & Review */}\n        {currentStep === 5 && (\n          <div className=\"step-container\">\n            <div className=\"step-header\">\n              <h2>Review & Export</h2>\n              <p>Review your complete grant proposal and export it</p>\n            </div>\n            \n            <div className=\"export-panel\">\n              <h3>📄 Your Grant Proposal</h3>\n              <p>Review your completed grant proposal before exporting.</p>\n              \n              <div className=\"export-actions\">\n                <button className=\"btn btn-primary\" onClick={handleExportMarkdown}>\n                  📝 Export as Markdown\n                </button>\n                <button className=\"btn btn-primary\" onClick={handleExportDocx}>\n                  📄 Export as TXT\n                </button>\n                <button className=\"btn btn-secondary\" onClick={handleReviewSections}>\n                  📋 Review Sections\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}